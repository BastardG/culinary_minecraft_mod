plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = '0.1-1.19.3'
group = 'ru.bastard.culinary' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'culinary'

// Mojang ships Java 17 to end users in 1.18+, so your mod should target Java 17.
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: 'official', version: '1.19.3'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'simple_exotics'

            mods {
                culinary {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'culinary'

            mods {
                culinary {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'simple_exotics'

            mods {
                culinary {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--tweakClass', 'org.spongepowered.asm.launch.MixinTweaker', '--mixin', 'mixins.culinary.json'//'--tweakClass', 'org.spongepowered.asm.launch.MixinTweaker', '--mixin', 'mixins.culinary.json', '--mod', 'culinary', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                culinary {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()

    maven {
        name = 'Sponge / Mixin'
        url = 'https://repo.spongepowered.org/maven/'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.3-44.1.0'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Culinary",
                "Specification-Vendor"    : "Bastard",
                "Specification-Version"   : "0.1", // We are version 1 of ourselves
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "MixinConfigs": "mixins.culinary.json",
                "FMLCorePluginContainsFMLMod": "true",  // Не забываем указать эти два флага,
                "ForceLoadAsMod": "true",               // чтобы Forge нормально загрузил и мод, и миксины
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

mixin {
    add sourceSets.main, 'mixins.culinary.refmap.json'
    config 'mixins.culinary.json'
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
